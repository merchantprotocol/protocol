#!/usr/bin/env php
<?php
/**
 * NOTICE OF LICENSE
 *
 * MIT License
 * 
 * Copyright (c) 2019 Merchant Protocol
 * 
 * Permission is hereby granted, free of charge, to any person obtaining a copy
 * of this software and associated documentation files (the "Software"), to deal
 * in the Software without restriction, including without limitation the rights
 * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
 * copies of the Software, and to permit persons to whom the Software is
 * furnished to do so, subject to the following conditions:
 * 
 * The above copyright notice and this permission notice shall be included in all
 * copies or substantial portions of the Software.
 * 
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
 * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
 * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
 * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
 * SOFTWARE.
 *
 * 
 * @category   merchantprotocol
 * @package    merchantprotocol/protocol
 * @copyright  Copyright (c) 2019 Merchant Protocol, LLC (https://merchantprotocol.com/)
 * @license    MIT License
 */

// Suppress deprecated, notice, and warning messages for CLI usage
error_reporting(E_ALL & ~E_DEPRECATED & ~E_USER_DEPRECATED & ~E_NOTICE & ~E_WARNING);
ini_set('display_errors', 'Off');

require __DIR__ . '/vendor/autoload.php';

DEFINE('WORKING_DIR', getcwd().DIRECTORY_SEPARATOR);
DEFINE('WEBROOT_DIR', __DIR__.DIRECTORY_SEPARATOR);
DEFINE('CONFIG_DIR', WEBROOT_DIR.'config'.DIRECTORY_SEPARATOR);
DEFINE('SRC_DIR', WEBROOT_DIR.'src'.DIRECTORY_SEPARATOR);
DEFINE('SCRIPT_DIR', WEBROOT_DIR.'bin'.DIRECTORY_SEPARATOR);
DEFINE('TEMPLATES_DIR', WEBROOT_DIR.'templates'.DIRECTORY_SEPARATOR);
DEFINE('COMMANDS_DIR', SRC_DIR.'Commands'.DIRECTORY_SEPARATOR);

use Symfony\Component\Console\Application;
$application = new Application();

// ... register commands
$files = glob(COMMANDS_DIR."*.{php}", GLOB_BRACE);
foreach($files as $file) {
    $filename = str_replace('.php', '', basename($file));
    $class = "\Gitcd\Commands\\$filename";
    $command = new $class();
    $application->add( $command );
}
$application->setName('Protocol');
$application->setVersion('0.3.0');
$application->run();